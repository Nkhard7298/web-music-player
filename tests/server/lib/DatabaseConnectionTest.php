<?php

require_once dirname(__FILE__).'/../../../server/lib/DatabaseConnection.php';

/**
 * Test class for DatabaseConnection.
 * Generated by PHPUnit on 2016-08-28 at 01:37:10.
 */
class DatabaseConnectionTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var DatabaseConnection
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before the test case class' first test.
     */
    public static function setUpBeforeClass()
    {
        require_once dirname(__FILE__).'/../../TestingTool.php';
        $test = new TestingTool();
        $test->backupConfig();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    public static function tearDownAfterClass()
    {
        require_once dirname(__FILE__).'/../../TestingTool.php';
        $test = new TestingTool();
        $test->restoreConfig();
    }

    /**
     * @covers DatabaseConnection::__construct
     */
    public function testConstructSqlite()
    {
        //setup a SQLlite configuration
        $localConfigFile = fopen($_SERVER['DOCUMENT_ROOT'].'/server/configuration/local.ini', 'w');
        fwrite($localConfigFile, "; This a dummy configuration file for PHPUnit tests\n");
        fwrite($localConfigFile, "dbEngine = \"sqlite\"\n");
        fwrite($localConfigFile, "dbPath = \"/tests/server/data/wmpDummyPHPUnit.sqlite\"\n");
        fclose($localConfigFile);
        $this->object = new DatabaseConnection();
        $this->assertInstanceOf('DatabaseConnection', $this->object, 'Object constructed should be a DatabaseConnection');
    }

    /**
     * @covers DatabaseConnection::__construct
     */
    public function testConstructMysql()
    {
        //setup a SQLlite configuration
        $localConfigFile = fopen($_SERVER['DOCUMENT_ROOT'].'/server/configuration/local.ini', 'w');
        fwrite($localConfigFile, "; This a dummy configuration file for PHPUnit tests\n");
        fwrite($localConfigFile, "dbEngine = \"mysql\"\n");
        fwrite($localConfigFile, "dbUser = \"wmp\"\n");
        fwrite($localConfigFile, "dbPwd = \"wmp\"\n");
        fwrite($localConfigFile, "dbName = \"wmpDummyPHPUnit\"\n");
        fclose($localConfigFile);
        try {
            $this->object = new DatabaseConnection();
            $this->assertInstanceOf('DatabaseConnection', $this->object, 'Object constructed should be a DatabaseConnection');
        } catch (Exception $exception) {
            $this->markTestIncomplete('You need to grant access on "wmpDummyPHPUnit" MySQL schema to the user "wmp" to run this test');
        }
    }
}
